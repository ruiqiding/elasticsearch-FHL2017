# Use Postman or curl to run the following.
# curl example:
# curl -H "Content-Type: application/json" -X POST -d '{BODY}' http://localhost:9200/PATH

# Create Index
PUT http://localhost:9200/message
{
    "settings" : {
        "index" : {
            "number_of_shards" : 3, 
            "number_of_replicas" : 1 
        }
    }
}

# Define mapping (schema)
PUT http://localhost:9200/message/_mapping/message
{
  "dynamic": "false",
  "properties": {
    "search_fields": {
      "properties": {
        "searchable_text": {
            "type": "text"
        },
        "access_data": {
          "properties": {
            "public_access": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "model": {
      "properties": {
        "id": {
          "properties": {
            "id": {
              "type": "long"
            },
            "type": {
              "type": "text"
            },
            "network": {
              "type": "long"
            }
          }
        },
        "state": {
          "type": "text"
        },
        "timestamp": {
          "type": "long"
        }
      }
    }
  }
}

# Index to messages
PUT http://localhost:9200/message/message/123
{
    "search_fields": {
        "searchable_text": "I love yammer Office365 MSFT",
        "access_data": {
            "public_access": true
        }
    },
    "model": {
        "id": {
            "id": 123,
            "type": "message",
            "network": 127
        },
        "state": "ACTIVE",
        "timestamp": 1501003003
    }
}

PUT http://localhost:9200/message/message/234
{
    "search_fields": {
        "searchable_text": "MSFT is amazing",
        "access_data": {
            "public_access": false
        }
    },
    "model": {
        "id": {
            "id": 234,
            "type": "message",
            "network": 117
        },
        "state": "ACTIVE",
        "timestamp": 1501003001
    }
}

# Search for message
POST http://localhost:9200/message/message/_search
{
  "query": { 
    "bool": { 
      "must": [
        { "match": { "search_fields.searchable_text": "MSFT" }}
      ],
      "filter": [ 
        { "term":  { "model.state": "active" }}, 
        { "term":  { "search_fields.access_data.public_access": "true" }}
      ]
    }
  }
}
